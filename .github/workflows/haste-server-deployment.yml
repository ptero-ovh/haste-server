name: Continuous Deployment - Haste Server

on:
  push:
    branches:
      - main
    paths:
      - 'haste-server/**'
      - '.github/workflows/haste-server-deployment.yml'

jobs:
  Building:
    name: Building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js 15
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Restore NodeJS Cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-15-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Restore Parcel Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/haste-server/.parcel-cache
          key: ${{ runner.os }}-parcel-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Run Parcel Build
        run: yarn build
      - name: Store dist folder
        uses: actions/upload-artifact@v2
        with:
          name: distfolder
          path: haste-server/dist/

  HasteServer-Image-GitHub:
    name: Publish haste-server image to Github Package Registry
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: distfolder
          path: haste-server/dist/
      - name: Publish to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: skyra-project/docker-images/haste-server
          username: NM-EEA-Y
          workdir: haste-server
          password: ${{ secrets.SKYRA_TOKEN }}
          tags: 'latest,stable,master,main'
          registry: docker.pkg.github.com

  HasteServer-Image-Dockerhub:
    name: Publish haste-server image to Dockerhub
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: distfolder
          path: haste-server/dist/
      - name: Publish to Dockerhub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: skyrabot/haste-server
          workdir: haste-server
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: 'latest,stable,master,main'
